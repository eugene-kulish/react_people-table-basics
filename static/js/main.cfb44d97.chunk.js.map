{"version":3,"sources":["App.tsx","pages/Home.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/People.tsx","pages/Root.tsx","index.tsx"],"names":["getLinkClassName","isActive","classNames","App","className","role","to","Home","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","people","slug","useParams","mother","find","human","name","motherName","father","fatherName","checkParentsObject","parent","href","sex","born","died","PeopleTable","map","People","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cfb44d97.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst getLinkClassName = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClassName} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClassName}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const Home: React.FC = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\nconst API_URL = (\n  'https://mate-academy.github.io/react_people-table/api/people.json'\n);\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  people: Person[];\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const { slug } = useParams();\n\n  const mother = people.find(human => (\n    human.name === person.motherName\n  ));\n\n  const father = people.find(human => (\n    human.name === person.fatherName\n  ));\n\n  const checkParentsObject = (\n    name: string | null,\n    parent: Person | undefined,\n  ) => {\n    if (!name) {\n      return (\n        <p>-</p>\n      );\n    }\n\n    if (parent) {\n      return (\n        <a\n          href={`#/people/${parent.slug}`}\n          className={classNames({\n            'has-text-danger': (parent.sex === 'f'),\n          })}\n        >\n          {name}\n        </a>\n      );\n    }\n\n    return (\n      <p>\n        {name}\n      </p>\n    );\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': (person.slug === slug),\n      })}\n    >\n      <td>\n        <a\n          className={classNames({\n            'has-text-danger': (person.sex === 'f'),\n          })}\n          href={`#/people/${person.slug}`}\n        >\n          {person.name}\n        </a>\n      </td>\n\n      <td>{person.sex}</td>\n\n      <td>{person.born}</td>\n\n      <td>{person.died}</td>\n\n      <td>\n        {checkParentsObject(person.motherName, mother)}\n      </td>\n\n      <td>\n        {checkParentsObject(person.fatherName, father)}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n\n          <th>Sex</th>\n\n          <th>Born</th>\n\n          <th>Died</th>\n\n          <th>Mother</th>\n\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n            people={people}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const People: React.FC = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !isError && (!people?.length\n            ? (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n            : (\n              <PeopleTable people={people} />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from '../App';\nimport { Home } from './Home';\nimport { NotFoundPage } from './NotFoundPage';\nimport { People } from './People';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Home />} />\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route index element={<People />} />\n\n          <Route path=\":slug\" element={<People />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './pages/Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}